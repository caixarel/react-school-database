{"version":3,"sources":["Context.js","components/CourseDetail.js","components/CreateCourse.js","components/Header.js","components/UpdateCourse.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","components/PrivateRoute.js","components/UnhandledError.js","components/NotFound.js","components/Forbidden.js","components/Courses.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Provider","signIn","emailaddress","password","a","axios","get","auth","username","catch","error","user","setState","authenticatedUser","Cookies","set","JSON","stringify","expires","signOut","remove","cookie","state","parse","config","value","actions","this","props","children","Component","Consumer","CourseDetail","useState","data","setData","id","useParams","context","useContext","deleteCourse","delete","then","response","history","push","useEffect","status","className","User","to","onClick","title","firstName","lastName","description","estimatedTime","materialsNeeded","CreateCourse","setTitle","setDescription","setTime","setMaterials","errors","setErrors","e","preventDefault","post","change","name","target","length","map","index","onSubmit","htmlFor","type","defaultValue","onChange","Header","UpdateCourse","handleSumit","put","UserSignIn","setPassword","setEmailAddress","from","location","pathname","UserSignUp","setFirstName","setLastName","emailAddress","UserSignOut","PrivateRoute","component","rest","render","UnhandledError","NotFound","Forbidden","Courses","element","version","xmlns","x","y","viewBox","points","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33359991.chunk.js","sourcesContent":["\nimport React,{ Component } from \"react\";\nimport axios from \"axios\";\nimport Cookies from 'js-cookie';\n\nconst Context = React.createContext(); \n//componenet containing the global state for the app \nexport class Provider extends Component{\n    constructor(){\n        super();\n        //cookie containing the user's information .allows user to keep logged in after refreshing the page\n        this.cookie = Cookies.get('authenticatedUser');\n        this.state={\n            //variable containing the user's' information\n            authenticatedUser:this.cookie ? JSON.parse(this.cookie) : null,\n            //variables containing the user's authorizations credentials\n            username:this.cookie ? JSON.parse(this.cookie).config.auth.username : null,\n            password:this.cookie ? JSON.parse(this.cookie).config.auth.password : null,\n        }\n    }\n    render(){\n        const value={\n            actions:{\n                signIn:this.signIn,\n                signOut:this.signOut\n            },\n            state:this.state\n        }\n        return(\n            <Context.Provider value={value}>\n                {this.props.children}\n            </Context.Provider>  \n        )\n    }\n    //function that will make the log in request to the server\n    signIn =async(emailaddress,password)=>{\n        const user = await axios.get('https://school-database-bruno.herokuapp.com/api/users',{\n            auth: {\n              password:password,\n              username:emailaddress\n            }}).catch(error => {\n              });\n              //if the user is successfully logged in his data will be so=tored on the global variables \n            if(user){\n                this.setState(()=>{\n                    return{\n                        authenticatedUser:user,\n                        username:emailaddress,\n                        password:password,\n                    }\n                })\n                //creates a cookie for the user with a expiration of 1 day\n                Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 });\n            }\n        return user;\n        \n    }\n    //function to perform the log out. Sets the global variables to null and deletes the user's cookie\n    signOut=()=>{\n        this.setState(()=>{\n            return{\n                authenticatedUser:null,\n                username:null,\n                password:null,\n            }\n        });\n        Cookies.remove('authenticatedUser');\n    }\n\n}\nexport const Consumer = Context.Consumer;\nexport default Context;","import React,{useState,useEffect,useContext} from \"react\";\nimport axios from \"axios\";\nimport { useParams,Link } from \"react-router-dom\";\nimport { Consumer} from '../Context';\nimport ReactMarkdown from 'react-markdown'\nimport Context from '../Context';\n\nfunction CourseDetail(props){\n    //variable containing the information about the selected course\n    const [data,setData] = useState()\n    //database ID from the selected course\n    let {id} = useParams();\n    //variables to store the password and username that will be used to verify the user authentication\n    let password ='';\n    let username = '';\n    const context =useContext(Context)\n    \n    //when the compoent launch all the details about the selected course will be stored in a variable\n    useEffect( ()=>{\n          axios.get(`https://school-database-bruno.herokuapp.com/api/courses/${id}`)\n            .then(response => {\n                setData(response.data)\n            })//in case of errors the user will be redirected to another page\n            .catch(error => {\n                if(error.response.status===404){\n                    props.history.push('/notfound');\n                  }\n                  else if(error.response.status===500){\n                    props.history.push('/error');\n                  }\n            });\n      },[id,props.history])\n      //function that allows the user to delete a course that is owned by that user\n        function deleteCourse(){\n            //stores the password and username retreived from the Context component\n            password=context.state.password;\n            username=context.state.username;\n            axios.delete(`https://school-database-bruno.herokuapp.com/api/courses/${id}`,{\n                auth: {\n                  password:password,\n                  username:username\n                }})\n            .then(response => {\n                props.history.push('/');\n                \n            })\n            .catch(error => {\n                props.history.push('/error');\n            });\n        }\n      \n        return (\n            <Consumer>\n                { context =>{\n                        return(\n                        <div id=\"root\">\n                            <main>\n                                <div className=\"actions--bar\">\n                                    <div className=\"wrap\">\n                                        {/* If the user isn't the owner of this course we will not have acess to the delete or update buttons */}\n                                        {context.state.authenticatedUser && data?.User.id && context.state.authenticatedUser.data?.id===data.User.id &&<>\n                                            <Link to={`/courses/${id}/update`} className=\"button\" >Update Course</Link>\n                                            <button className=\"button\"  onClick={deleteCourse}>Delete Course</button>\n                                        </>\n                                        }\n                                        <Link to ='/'className=\"button button-secondary\" >Return to List</Link>\n                                    </div>\n                                </div>\n                                <div className=\"wrap\">\n                                    <h2>Course Detail</h2>\n                                    <form>\n                                        <div className=\"main--flex\">\n                                            <div>\n                                                <h3 className=\"course--detail--title\">Course</h3>\n                                                <h4 className=\"course--name\">{data?.title}</h4>\n                                                <p>{data?.User.firstName} {data?.User.lastName}</p>\n                                                <ReactMarkdown>\n                                                    {data?.description}\n                                                </ReactMarkdown>\n                                            </div>\n                                            <div>\n                                                <h3 className=\"course--detail--title\">Estimated Time</h3>\n                                                <p>{data?.estimatedTime}</p>                       \n                                                <h3 className=\"course--detail--title\">Materials Needed</h3>\n                                                <ul className=\"course--detail--list\">\n                                                <ReactMarkdown>\n                                                    {data?.materialsNeeded}\n                                                </ReactMarkdown>\n      \n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </main>\n                        </div>\n                    )\n                    }\n                }\n            </Consumer>\n            )\n}\n\nexport default CourseDetail;","import React,{useContext,useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from \"axios\";\nimport Context from '../Context';\n\nfunction CreateCourse(props){\n    const context =useContext(Context)\n    //variables to store the new course information\n    const [title,setTitle]=useState('');\n    const [description,setDescription]=useState('');\n    const [estimatedTime,setTime]=useState('');\n    const [materialsNeeded,setMaterials]=useState('');\n    //storing possible errors when filling the course form\n    const [errors,setErrors]=useState([]);\n\n    async function handleSumit (e){\n        e.preventDefault();\n        //create new course \n        await axios.post('https://school-database-bruno.herokuapp.com/api/courses',{\n            title,description,estimatedTime,materialsNeeded\n        },{\n            auth: {\n              password:context.state.password,\n              username:context.state.username\n            }})\n        .then(response=>{\n            props.history.push('/');\n        }\n        )\n        .catch(error => {\n            if(error.response.status===400){\n                 setErrors(error.response.data.errors);\n            }\n            else if(error.response.status===404){\n                props.history.push('/notfound');\n              }\n              else if(error.response.status===500){\n                props.history.push('/error');\n  \n              }\n          });\n    }\n    //when the user writes on any of the form inputs or text area,that value will be stored on the\n    //respective variables\n    function change(e){\n        const name = e.target.name;\n        const value = e.target.value;\n        if(name===\"title\"){\n            setTitle(value)\n        }\n        else if(name==='description'){\n            setDescription(value)\n\n        }else if(name==='estimatedTime'){\n            setTime(value)\n        }else if(name==='materialsNeeded'){\n            setMaterials(value)\n        }\n\n    }\n    return(\n        <div id=\"root\">\n            <main>\n                <div className='wrap'>\n                    <h2>Create Course</h2>\n                    {/* Form errors will be shown here */}\n                        {\n                            errors.length>0\n                            ?<><div className=\"validation--errors\">\n                            <h3>Validation Errors</h3>\n                                <ul>\n                                    {(errors.map((error,index)=>{\n                                    return(\n                                        <li key={index}>{error}</li>\n                                    )\n                                }))}\n                                </ul></div>\n                            </>\n                            :null\n                        }\n                    <form onSubmit={handleSumit}>\n                        <div className=\"main--flex\">\n                            <div>\n                                 <label htmlFor=\"courseTitle\">Course Title</label>\n                                 <input id=\"courseTitle\" name=\"title\" type=\"text\" defaultValue=\"\" onChange={change}/>\n                                 <p>By Joe Smith</p>\n\n                                 <label htmlFor=\"courseDescription\">Course Description</label>\n                                <textarea id=\"courseDescription\" name=\"description\" onChange={change}></textarea>\n                            </div>\n                            <div>\n                                <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                                <input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" defaultValue=\"\"onChange={change}/>\n                                <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                                <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" onChange={change}></textarea>\n                            </div>\n                        </div>\n                        <button className=\"button\" type=\"submit\" >Create Course</button><Link to='/' className=\"button button-secondary\" >Cancel</Link>\n                    </form>\n                </div>\n            </main>\n        </div>\n    )\n}\nexport default CreateCourse;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { Consumer } from '../Context'\n\n\nfunction Header(){\n    return(\n        <Consumer>\n            {context=>{\n                    return(\n                        <header>\n                        <div className=\"wrap header--flex\">\n                            <h1 className=\"header--logo\"><Link to=\"/\">Courses</Link></h1>\n                            <nav>\n                                <ul className=\"header--signedin\">  \n                                    {/* if the user is logged in,his name will be shown on the header of the page,otherwise a link to the sign page is displayed */}\n                                    {\n                                        context.state.authenticatedUser\n                                        ? (<>\n                                            <li>{context.state.authenticatedUser.data.firstName}</li>\n                                            <li><Link to=\"/signout\">Sign Out</Link></li></>\n                                        )\n                                        :(<>\n                                            <li><Link to=\"/signin\">Sign In</Link></li>\n                                             <li><Link to=\"/signup\">Sign Up</Link></li></>\n                                        ) \n                                        }\n                                </ul>\n                            </nav>\n                        </div>\n                        </header>\n                    )\n                \n                }\n                }\n                \n        </Consumer>\n        \n    )\n}\n\nexport default Header;","import React,{useState,useEffect,useContext} from \"react\";\nimport { useParams,Link } from \"react-router-dom\";\nimport { Consumer} from '../Context';\nimport Context from '../Context';\nimport axios from \"axios\";\n\nfunction UpdateCourse(props){\n    const context =useContext(Context)\n    //variables to store the new course information\n    const [title,setTitle]=useState('');\n    const [description,setDescription]=useState('');\n    const [estimatedTime,setTime]=useState('');\n    const [materialsNeeded,setMaterials]=useState('');\n    //data from the course to be updated\n    const [data,setData] = useState()\n    const [errors,setErrors]=useState([]);\n    //id of the course\n    let {id} = useParams();\n\n    //when the compoent launch all the details about the selected course will be stored in a variable\n    useEffect( ()=>{\n         axios.get(`https://school-database-bruno.herokuapp.com/api/courses/${id}`)\n          .then(response => {\n            setData(response.data);\n            //instead of showing empty form fields, the page loads with the existing data for the course\n            setMaterials(response.data.materialsNeeded);\n            setTitle(response.data.title);\n            setDescription(response.data.description);\n            setTime(response.data.estimatedTime);\n            //if the user tries to update a course that doesn't belong to him he will not be able to acess it\n            if(context.state.authenticatedUser.data?.id!==response.data.User.id){\n                props.history.push('/forbidden');\n            }\n          })\n          .catch(error => {\n            if(error.response.status===400){\n                setErrors(error.response.data.errors);\n            }\n            else if(error.response.status===404){\n              props.history.push('/notfound');\n            }\n            else if(error.response.status===500){\n              props.history.push('/error');\n            }\n          });\n    },[id,props.history,context.state.authenticatedUser.data?.id])\n\n    async function handleSumit(e){\n        e.preventDefault();\n        await axios.put(`https://school-database-bruno.herokuapp.com/api/courses/${id}`,{\n            title,description,estimatedTime,materialsNeeded\n        },{\n            auth: {\n              password:context.state.password,\n              username:context.state.username\n            }})\n        .then(response=>{\n            props.history.push('/');\n        }\n        ).catch(error => {\n            if(error.response.status===400){\n                setErrors(error.response.data.errors);\n            }\n            else if(error.response.status===404){\n                props.history.push('/notfound');\n              }\n              else if(error.response.status===500){\n                props.history.push('/error');\n              }\n          });\n    }\n    //when the user writes on any of the form inputs or text area,that value will be stored on the\n    //respective variables\n    function change(e){\n        const name = e.target.name;\n        const value = e.target.value;\n        if(name===\"title\"){\n            setTitle(value)\n        }\n        else if(name==='description'){\n            setDescription(value)\n        }else if(name==='estimatedTime'){\n            setTime(value)\n        }else if(name==='materialsNeeded'){\n            setMaterials(value)\n        }\n    }\n   \n    return (\n        <Consumer>\n        {context=>{\n            return(\n                <div className=\"wrap\">\n                    <h2>Update Course</h2>\n                    {/* Form errors will be shown here */}\n                    {\n                        errors.length>0\n                        ?<><div className=\"validation--errors\">\n                            <h3>Validation Errors</h3>\n                                <ul>\n                                    {(errors.map((error,index)=>{\n                                    return(\n                                        <li key={index}>{error}</li>\n                                    )\n                                }))}\n                                </ul>\n                            </div>\n                        </>\n                        :null\n                    }\n                    <form>\n                        <div className=\"main--flex\">\n                            <div>\n                                <label htmlFor=\"courseTitle\">Course Title</label>\n                                <input id=\"courseTitle\" name=\"title\" type=\"text\" defaultValue={data?.title} onChange={change}/>\n                                <label htmlFor=\"courseDescription\">Course Description</label>\n                                <textarea id=\"courseDescription\" name=\"description\" defaultValue={data?.description} onChange={change}></textarea>\n                                \n                            </div>\n                            <div>\n                                <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                                <input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" defaultValue={data?.estimatedTime} onChange={change}/>\n                                <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                                <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" defaultValue={materialsNeeded}onChange={change}></textarea>\n                            </div>\n                        </div>\n                        <button className=\"button\" type=\"submit\" onClick={handleSumit}>Update Course</button><Link to='/' className=\"button button-secondary\" >Cancel</Link>\n                    </form>\n                </div>\n            )\n        }}\n    </Consumer>\n    )\n}\nexport default UpdateCourse;","import React,{useState,useContext} from 'react'\nimport {Link} from 'react-router-dom'\nimport Context from '../Context';\n\n\nfunction UserSignIn(props){\n    //variables containing the login information\n    const [password,setPassword]=useState('');\n    const [emailaddress,setEmailAddress]=useState('');\n\n    const context =useContext(Context)\n    const [errors,setErrors]=useState([]);\n    //when the form is submit the login information will be sent to the server'api' to check if there is a user with the matching credentials\n    function handleSubmit(e){\n        e.preventDefault();\n        const { from } = props.location.state || { from: { pathname: '/' } };\n        context.actions.signIn(emailaddress,password)\n        .then( user => {\n            if (user) {\n                //if the user is succesfully loged in he \n                //will be redirected to the main page or to the page he was trying to acess\n                props.history.push(from);\n            }else{\n              setErrors('The username or password are not correct')\n            }\n          })\n          .catch( error => {\n            if(error.response.status===404){\n                props.history.push('/notfound');\n              }\n              else if(error.response.status===500){\n                props.history.push('/error');\n              }\n          })        \n    }\n    function changeEmail(e){\n        setEmailAddress(e.target.value)\n    }\n    function changePassword(e){\n        setPassword(e.target.value);\n    }\n    return (\n        <div className=\"form--centered\">\n                <h2>Sign In</h2>\n                {/* Form errors will be shown here */}\n                {\n                        errors.length>0\n                        ?<><div className=\"validation--errors\">\n                            <h3>Validation Errors</h3>\n                                <ul>\n                                    <li >{errors}</li>\n                    \n                                </ul>\n                            </div>\n                        </>\n                        :null\n                    }\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"emailAddress\">Email Address</label>\n                    <input id=\"emailAddress\" name=\"emailAddress\" type=\"email\" defaultValue=\"\"onChange={changeEmail}/>\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" name=\"password\" type=\"password\" defaultValue=\"\"onChange={changePassword}/>\n                    <button className=\"button\" type=\"submit\" >Sign In</button><Link to='/' className=\"button button-secondary\" >Cancel</Link>\n                </form>\n                <p>Don't have a user account? Click here to <Link to='/signup'>sign up</Link>!</p>\n                \n            </div>\n    )\n}\n\nexport default UserSignIn;","\nimport React,{useContext,useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from \"axios\";\nimport Context from '../Context';\n\nfunction UserSignUp(props){\n    const [firstName,setFirstName]=useState('');\n    const [lastName,setLastName]=useState('');\n    const [password,setPassword]=useState('');\n    const [errors,setErrors]=useState([]);\n    const [emailAddress,setEmailAddress]=useState('');\n    const context =useContext(Context)\n\n\n\n    //the form information will be sent to the server 'api' in order to create a new user\n    async function handleSubmit(e){\n        e.preventDefault();\n        await axios.post(`https://school-database-bruno.herokuapp.com/api/users`,{\n            firstName,lastName,emailAddress,password\n        })\n        .then(response=>{\n            context.actions.signIn(emailAddress,password)\n            props.history.push('/');\n        }\n        ).catch(error => {\n            if(error.response.status===404){\n                props.history.push('/notfound');\n              }\n              else if(error.response.status===500){\n                props.history.push('/error');\n  \n              }else{\n                setErrors(error.response.data.errors);\n              }\n          });\n    }\n\n    //when the user writes on any of the form inputs or text area,that value will be stored on the\n    //respective variables\n    function change(e){\n        const name = e.target.name;\n        const value = e.target.value;\n        if(name===\"firstName\"){\n            setFirstName(value)\n        }\n        else if(name==='lastName'){\n            setLastName(value)\n\n        }else if(name==='emailAddress'){\n            setEmailAddress(value)\n        }else if(name==='password'){\n            setPassword(value)\n        }\n    }\n    return (\n        <div className=\"form--centered\">\n                <h2>Sign Up</h2>\n                {/* Form errors will be shown here */}\n                {\n                    errors.length>0\n                    ?<><div className=\"validation--errors\">\n                        <h3>Validation Errors</h3>\n                            <ul>\n                                {(errors.map((error,index)=>{\n                                return(\n                                    <li key={index}>{error}</li>\n                                )\n                            }))}\n                            </ul>\n                        </div>\n                    </>\n                    :null\n                }\n                <form>\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input id=\"firstName\" name=\"firstName\" type=\"text\" defaultValue=\"\"onChange={change}/>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input id=\"lastName\" name=\"lastName\" type=\"text\" defaultValue=\"\"onChange={change}/>\n                    <label htmlFor=\"emailAddress\">Email Address</label>\n                    <input id=\"emailAddress\" name=\"emailAddress\" type=\"email\" defaultValue=\"\"onChange={change}/>\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" name=\"password\" type=\"password\" defaultValue=\"\"onChange={change}/>\n                    <button className=\"button\" type=\"submit\" onClick={handleSubmit}>Sign Up</button><Link to='/' className=\"button button-secondary\" >Cancel</Link>\n                </form>\n                <p>Already have a user account? Click here to <Link to='/signin' >sign in</Link>!</p>\n            </div>\n    )\n\n}\nexport default UserSignUp;","import {useEffect,useContext} from 'react'\nimport Context from '../Context';\n\nfunction UserSignOut(props){\n    const context =useContext(Context)\n    //when the user signs out he will be redirected to the main page and \n    //the cookie containing his authentication will be deleted\n    useEffect(()=>{\n        context.actions.signOut();\n        props.history.push('/');\n    },[context.actions,props.history])\n    return null;\n\n}\nexport default UserSignOut;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from '../Context';\n\n//private route component to prevent users who are not logged in to acess certain pages that requires a logged user\nconst PrivateRoute=({ component: Component, ...rest }) => {\n  return (\n    <Consumer>\n      { context => (\n        <Route\n          {...rest}\n          render={props=>context.state.authenticatedUser? (\n            <Component {...props} />\n          ):(\n            <Redirect to ={{\n              pathname:'/signin',\n              state:{from:props.location}\n            }}/>\n          )\n          }\n        />\n      )}\n    </Consumer>\n  );\n};\nexport default PrivateRoute;","import React from 'react'\n\nfunction UnhandledError (){\n    return(\n        <div id=\"root\">\n            <main>\n                <div className=\"wrap\">\n                    <h2>Error</h2>\n                    <p>Sorry! We just encountered an unexpected error.</p>\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default UnhandledError;","import React from 'react'\n\nfunction NotFound (){\n    return(\n        <div id=\"root\">\n        <main>\n            <div className=\"wrap\">\n                <h2>Not Found</h2>\n                <p>Sorry! We couldn't find the page you're looking for.</p>\n            </div>\n        </main>\n    </div>\n    )\n}\n\nexport default NotFound;","import React from 'react'\n\nfunction Forbidden (){\n    return(\n        <div id=\"root\">\n            <main>\n                <div className=\"wrap\">\n                    <h2>Forbidden</h2>\n                    <p>Oh oh! You can't access this page.</p>\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default Forbidden;","import React,{useState,useEffect} from \"react\";\nimport {Link} from 'react-router-dom'\nimport axios from \"axios\";\n\nfunction Courses(props){\n    //variable containing the information about all courses\n    const [data,setData] = useState([])\n\n    useEffect( ()=>{\n        //on the launch of the component all courses in the database will be stored on the data variables\n         axios.get(`https://school-database-bruno.herokuapp.com/api/courses`)\n            .then(response => {\n              setData(response.data)\n            })\n            .catch(error => {\n                 if(error.response.status===404){\n                    props.history.push('/notfound');\n                  }\n                  else if(error.response.status===500){\n                    props.history.push('/error');\n      \n                  }\n            });\n      },[props.history])\n\n    return(\n        <div id=\"root\">\n            <main>\n                <div className=\"wrap main--grid\">\n                {/* iteration over all the courses from the database and create a link to each of them */}\n                {data.map((element,index)=>{\n                    return (\n                        <Link to={`/courses/${element.id}`} className=\"course--module course--link\"  key={index} >\n                            <h2 className=\"course--label\">Course</h2>\n                            <h3 className=\"course--title\">{element.title}</h3>\n                        </Link>\n                        )\n                })}\n                    <Link to='/courses/create' className=\"course--module course--add--module\" >\n                        <span className=\"course--add--title\">\n                            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                            viewBox=\"0 0 13 13\" className=\"add\"><polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon></svg>\n                            New Course\n                        </span>\n                    </Link>\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default Courses;","\nimport './App.css';\nimport React from \"react\";\nimport CourseDetail from './components/CourseDetail'\nimport CreateCourse from './components/CreateCourse'\nimport Header from './components/Header'\nimport UpdateCourse from './components/UpdateCourse';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignOut from './components/UserSignOut';\nimport { Provider } from './Context';\nimport PrivateRoute from './components/PrivateRoute';\nimport UnhandledError from './components/UnhandledError';\nimport NotFound from './components/NotFound';\nimport Forbidden from './components/Forbidden';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Courses from './components/Courses';\n\nfunction App() {\n \n//routes used for the app\n  return (\n    <Provider >\n      <Router >\n            <Header />\n            <Switch >\n              <Route exact path='/' component={Courses} />\n              <PrivateRoute exact path='/courses/create' component={CreateCourse} />\n              <PrivateRoute exact path='/courses/:id/update' component={UpdateCourse} />\n              <Route exact path='/courses/:id' component={CourseDetail} />\n              <Route exact path='/signin' component={UserSignIn} />\n              <Route exact path='/signup' component={UserSignUp} />\n              <Route exact path='/signout' component={UserSignOut} />\n              <Route exact path='/error' component={UnhandledError} />\n              <Route exact path='/notfound' component={NotFound} />\n              <Route exact path='/forbidden' component={Forbidden} />\n              <Route component={NotFound} />\n            </Switch>\n          </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}